{
  "version": 3,
  "sources": ["../../../../../../node_modules/@zxing/browser/esm/common/HTMLCanvasElementLuminanceSource.js", "../../../../../../node_modules/@zxing/browser/esm/common/navigator-utils.js", "../../../../../../node_modules/@zxing/browser/esm/readers/BrowserCodeReader.js", "../../../../../../node_modules/@zxing/browser/esm/readers/BrowserAztecCodeReader.js", "../../../../../../node_modules/@zxing/browser/esm/readers/BrowserMultiFormatOneDReader.js", "../../../../../../node_modules/@zxing/browser/esm/readers/BrowserDatamatrixCodeReader.js", "../../../../../../node_modules/@zxing/browser/esm/readers/BrowserMultiFormatReader.js", "../../../../../../node_modules/@zxing/browser/esm/readers/BrowserPDF417Reader.js", "../../../../../../node_modules/@zxing/browser/esm/readers/BrowserQRCodeReader.js", "../../../../../../node_modules/@zxing/browser/esm/writers/BrowserCodeSvgWriter.js", "../../../../../../node_modules/@zxing/browser/esm/writers/BrowserQRCodeSvgWriter.js"],
  "sourcesContent": ["var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { IllegalArgumentException, InvertedLuminanceSource, LuminanceSource } from '@zxing/library';\n/**/\nvar HTMLCanvasElementLuminanceSource = /** @class */function (_super) {\n  __extends(HTMLCanvasElementLuminanceSource, _super);\n  function HTMLCanvasElementLuminanceSource(canvas) {\n    var _this = _super.call(this, canvas.width, canvas.height) || this;\n    _this.canvas = canvas;\n    _this.tempCanvasElement = null;\n    _this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(canvas);\n    return _this;\n  }\n  HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData = function (canvas) {\n    var canvasCtx;\n    try {\n      canvasCtx = canvas.getContext('2d', {\n        willReadFrequently: true\n      });\n    } catch (e) {\n      canvasCtx = canvas.getContext('2d');\n    }\n    if (!canvasCtx) {\n      throw new Error('Couldn\\'t get canvas context.');\n    }\n    var imageData = canvasCtx.getImageData(0, 0, canvas.width, canvas.height);\n    return HTMLCanvasElementLuminanceSource.toGrayscaleBuffer(imageData.data, canvas.width, canvas.height);\n  };\n  HTMLCanvasElementLuminanceSource.toGrayscaleBuffer = function (imageBuffer, width, height) {\n    var grayscaleBuffer = new Uint8ClampedArray(width * height);\n    for (var i = 0, j = 0, length_1 = imageBuffer.length; i < length_1; i += 4, j++) {\n      var gray = void 0;\n      var alpha = imageBuffer[i + 3];\n      // The color of fully-transparent pixels is irrelevant. They are often, technically, fully-transparent\n      // black (0 alpha, and then 0 RGB). They are often used, of course as the \"white\" area in a\n      // barcode image. Force any such pixel to be white:\n      if (alpha === 0) {\n        gray = 0xFF;\n      } else {\n        var pixelR = imageBuffer[i];\n        var pixelG = imageBuffer[i + 1];\n        var pixelB = imageBuffer[i + 2];\n        // .299R + 0.587G + 0.114B (YUV/YIQ for PAL and NTSC),\n        // (306*R) >> 10 is approximately equal to R*0.299, and so on.\n        // 0x200 >> 10 is 0.5, it implements rounding.\n        // tslint:disable-next-line:no-bitwise\n        gray = 306 * pixelR + 601 * pixelG + 117 * pixelB + 0x200 >> 10;\n      }\n      grayscaleBuffer[j] = gray;\n    }\n    return grayscaleBuffer;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.getRow = function (y /*int*/, row) {\n    if (y < 0 || y >= this.getHeight()) {\n      throw new IllegalArgumentException('Requested row is outside the image: ' + y);\n    }\n    var width = this.getWidth();\n    var start = y * width;\n    if (row === null) {\n      row = this.buffer.slice(start, start + width);\n    } else {\n      if (row.length < width) {\n        row = new Uint8ClampedArray(width);\n      }\n      // The underlying raster of image consists of bytes with the luminance values\n      // TODO: can avoid set/slice?\n      row.set(this.buffer.slice(start, start + width));\n    }\n    return row;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.getMatrix = function () {\n    return this.buffer;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.isCropSupported = function () {\n    return true;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.crop = function (left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n    _super.prototype.crop.call(this, left, top, width, height);\n    return this;\n  };\n  /**\n   * This is always true, since the image is a gray-scale image.\n   *\n   * @return true\n   */\n  HTMLCanvasElementLuminanceSource.prototype.isRotateSupported = function () {\n    return true;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.rotateCounterClockwise = function () {\n    this.rotate(-90);\n    return this;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.rotateCounterClockwise45 = function () {\n    this.rotate(-45);\n    return this;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.invert = function () {\n    return new InvertedLuminanceSource(this);\n  };\n  HTMLCanvasElementLuminanceSource.prototype.getTempCanvasElement = function () {\n    if (null === this.tempCanvasElement) {\n      var tempCanvasElement = this.canvas.ownerDocument.createElement('canvas');\n      tempCanvasElement.width = this.canvas.width;\n      tempCanvasElement.height = this.canvas.height;\n      this.tempCanvasElement = tempCanvasElement;\n    }\n    return this.tempCanvasElement;\n  };\n  HTMLCanvasElementLuminanceSource.prototype.rotate = function (angle) {\n    var tempCanvasElement = this.getTempCanvasElement();\n    if (!tempCanvasElement) {\n      throw new Error('Could not create a Canvas element.');\n    }\n    var angleRadians = angle * HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS;\n    // Calculate and set new dimensions for temp canvas\n    var width = this.canvas.width;\n    var height = this.canvas.height;\n    var newWidth = Math.ceil(Math.abs(Math.cos(angleRadians)) * width + Math.abs(Math.sin(angleRadians)) * height);\n    var newHeight = Math.ceil(Math.abs(Math.sin(angleRadians)) * width + Math.abs(Math.cos(angleRadians)) * height);\n    tempCanvasElement.width = newWidth;\n    tempCanvasElement.height = newHeight;\n    var tempContext = tempCanvasElement.getContext('2d');\n    if (!tempContext) {\n      throw new Error('Could not create a Canvas Context element.');\n    }\n    // Draw at center of temp canvas to prevent clipping of image data\n    tempContext.translate(newWidth / 2, newHeight / 2);\n    tempContext.rotate(angleRadians);\n    tempContext.drawImage(this.canvas, width / -2, height / -2);\n    this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(tempCanvasElement);\n    return this;\n  };\n  HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS = Math.PI / 180;\n  return HTMLCanvasElementLuminanceSource;\n}(LuminanceSource);\nexport { HTMLCanvasElementLuminanceSource };\n", "/**\n * If navigator is present.\n */\nexport function hasNavigator() {\n  return typeof navigator !== 'undefined';\n}\n/**\n * If mediaDevices under navigator is supported.\n */\nfunction isMediaDevicesSupported() {\n  return hasNavigator() && !!navigator.mediaDevices;\n}\n/**\n * If enumerateDevices under navigator is supported.\n */\nexport function canEnumerateDevices() {\n  return !!(isMediaDevicesSupported() && navigator.mediaDevices.enumerateDevices);\n}\n", "var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { ArgumentException, BinaryBitmap, ChecksumException, DecodeHintType, FormatException, HybridBinarizer, NotFoundException } from '@zxing/library';\nimport { HTMLCanvasElementLuminanceSource } from '../common/HTMLCanvasElementLuminanceSource';\nimport { canEnumerateDevices, hasNavigator } from '../common/navigator-utils';\nvar defaultOptions = {\n  delayBetweenScanAttempts: 500,\n  delayBetweenScanSuccess: 500,\n  tryPlayVideoTimeout: 5000\n};\n/**\n * Base class for browser code reader.\n */\nvar BrowserCodeReader = /** @class */function () {\n  /**\n   * Creates an instance of BrowserCodeReader.\n   * @param {Reader} reader The reader instance to decode the barcode\n   * @param hints Holds the hints the user sets for the Reader.\n   */\n  function BrowserCodeReader(reader, hints, options) {\n    if (hints === void 0) {\n      hints = new Map();\n    }\n    if (options === void 0) {\n      options = {};\n    }\n    this.reader = reader;\n    this.hints = hints;\n    this.options = __assign(__assign({}, defaultOptions), options);\n  }\n  Object.defineProperty(BrowserCodeReader.prototype, \"possibleFormats\", {\n    /**\n     * Allows to change the possible formats the decoder should\n     * search for while scanning some image. Useful for changing\n     * the possible formats during BrowserCodeReader::scan.\n     */\n    set: function (formats) {\n      this.hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Defines what the videoElement src will be.\n   *\n   * @param videoElement\n   * @param stream The stream to be added as a source.\n   */\n  BrowserCodeReader.addVideoSource = function (videoElement, stream) {\n    // Older browsers may not have `srcObject`\n    try {\n      // @note Throws Exception if interrupted by a new loaded request\n      videoElement.srcObject = stream;\n    } catch (err) {\n      console.error(\"got interrupted by new loading request\");\n    }\n  };\n  /**\n   * Enables or disables the torch in a media stream.\n   *\n   * @experimental This doesn't work across all browsers and is still a Draft.\n   */\n  BrowserCodeReader.mediaStreamSetTorch = function (track, onOff) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, track.applyConstraints({\n              advanced: [{\n                fillLightMode: onOff ? 'flash' : 'off',\n                torch: onOff ? true : false\n              }]\n            })];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Checks if the stream has torch support.\n   */\n  BrowserCodeReader.mediaStreamIsTorchCompatible = function (params) {\n    var e_1, _a;\n    var tracks = params.getVideoTracks();\n    try {\n      for (var tracks_1 = __values(tracks), tracks_1_1 = tracks_1.next(); !tracks_1_1.done; tracks_1_1 = tracks_1.next()) {\n        var track = tracks_1_1.value;\n        if (BrowserCodeReader.mediaStreamIsTorchCompatibleTrack(track)) {\n          return true;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (tracks_1_1 && !tracks_1_1.done && (_a = tracks_1.return)) _a.call(tracks_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return false;\n  };\n  /**\n   *\n   * @param track The media stream track that will be checked for compatibility.\n   */\n  BrowserCodeReader.mediaStreamIsTorchCompatibleTrack = function (track) {\n    try {\n      var capabilities = track.getCapabilities();\n      return 'torch' in capabilities;\n    } catch (err) {\n      // some browsers may not be compatible with ImageCapture\n      // so we are ignoring this for now.\n      // tslint:disable-next-line:no-console\n      console.error(err);\n      // tslint:disable-next-line:no-console\n      console.warn('Your browser may be not fully compatible with WebRTC and/or ImageCapture specs. Torch will not be available.');\n      return false;\n    }\n  };\n  /**\n   * Checks if the given video element is currently playing.\n   */\n  BrowserCodeReader.isVideoPlaying = function (video) {\n    return video.currentTime > 0 && !video.paused && video.readyState > 2;\n  };\n  /**\n   * Searches and validates a media element.\n   */\n  BrowserCodeReader.getMediaElement = function (mediaElementId, type) {\n    var mediaElement = document.getElementById(mediaElementId);\n    if (!mediaElement) {\n      throw new ArgumentException(\"element with id '\".concat(mediaElementId, \"' not found\"));\n    }\n    if (mediaElement.nodeName.toLowerCase() !== type.toLowerCase()) {\n      throw new ArgumentException(\"element with id '\".concat(mediaElementId, \"' must be an \").concat(type, \" element\"));\n    }\n    return mediaElement;\n  };\n  /**\n   * Receives a source and makes sure to return a Video Element from it or fail.\n   */\n  BrowserCodeReader.createVideoElement = function (videoThingy) {\n    if (videoThingy instanceof HTMLVideoElement) {\n      return videoThingy;\n    }\n    if (typeof videoThingy === 'string') {\n      return BrowserCodeReader.getMediaElement(videoThingy, 'video');\n    }\n    if (!videoThingy && typeof document !== 'undefined') {\n      var videoElement = document.createElement('video');\n      videoElement.width = 200;\n      videoElement.height = 200;\n      return videoElement;\n    }\n    throw new Error('Couldn\\'t get videoElement from videoSource!');\n  };\n  /**\n   * Receives a source and makes sure to return an Image Element from it or fail.\n   */\n  BrowserCodeReader.prepareImageElement = function (imageSource) {\n    if (imageSource instanceof HTMLImageElement) {\n      return imageSource;\n    }\n    if (typeof imageSource === 'string') {\n      return BrowserCodeReader.getMediaElement(imageSource, 'img');\n    }\n    if (typeof imageSource === 'undefined') {\n      var imageElement = document.createElement('img');\n      imageElement.width = 200;\n      imageElement.height = 200;\n      return imageElement;\n    }\n    throw new Error('Couldn\\'t get imageElement from imageSource!');\n  };\n  /**\n   * Sets a HTMLVideoElement for scanning or creates a new one.\n   *\n   * @param videoElem The HTMLVideoElement to be set.\n   */\n  BrowserCodeReader.prepareVideoElement = function (videoElem) {\n    var videoElement = BrowserCodeReader.createVideoElement(videoElem);\n    // @todo the following lines should not always be done this way, should conditionally\n    // change according were we created the element or not\n    // Needed for iOS 11\n    videoElement.setAttribute('autoplay', 'true');\n    videoElement.setAttribute('muted', 'true');\n    videoElement.setAttribute('playsinline', 'true');\n    return videoElement;\n  };\n  /**\n   * Checks if and HTML image is loaded.\n   */\n  BrowserCodeReader.isImageLoaded = function (img) {\n    // During the onload event, IE correctly identifies any images that\n    // weren't downloaded as not complete. Others should too. Gecko-based\n    // browsers act like NS4 in that they report this incorrectly.\n    if (!img.complete) {\n      return false;\n    }\n    // However, they do have two very useful properties: naturalWidth and\n    // naturalHeight. These give the true size of the image. If it failed\n    // to load, either of these should be zero.\n    if (img.naturalWidth === 0) {\n      return false;\n    }\n    // No other way of checking: assume it’s ok.\n    return true;\n  };\n  /**\n   * Creates a binaryBitmap based in a canvas.\n   *\n   * @param canvas HTML canvas element containing the image source draw.\n   */\n  BrowserCodeReader.createBinaryBitmapFromCanvas = function (canvas) {\n    var luminanceSource = new HTMLCanvasElementLuminanceSource(canvas);\n    var hybridBinarizer = new HybridBinarizer(luminanceSource);\n    return new BinaryBitmap(hybridBinarizer);\n  };\n  /**\n   * Overwriting this allows you to manipulate the snapshot image in anyway you want before decode.\n   */\n  BrowserCodeReader.drawImageOnCanvas = function (canvasElementContext, srcElement) {\n    canvasElementContext.drawImage(srcElement, 0, 0);\n  };\n  BrowserCodeReader.getMediaElementDimensions = function (mediaElement) {\n    if (mediaElement instanceof HTMLVideoElement) {\n      return {\n        height: mediaElement.videoHeight,\n        width: mediaElement.videoWidth\n      };\n    }\n    if (mediaElement instanceof HTMLImageElement) {\n      return {\n        height: mediaElement.naturalHeight || mediaElement.height,\n        width: mediaElement.naturalWidth || mediaElement.width\n      };\n    }\n    throw new Error('Couldn\\'t find the Source\\'s dimensions!');\n  };\n  /**\n   * 🖌 Prepares the canvas for capture and scan frames.\n   */\n  BrowserCodeReader.createCaptureCanvas = function (mediaElement) {\n    if (!mediaElement) {\n      throw new ArgumentException('Cannot create a capture canvas without a media element.');\n    }\n    if (typeof document === 'undefined') {\n      throw new Error('The page \"Document\" is undefined, make sure you\\'re running in a browser.');\n    }\n    var canvasElement = document.createElement('canvas');\n    var _a = BrowserCodeReader.getMediaElementDimensions(mediaElement),\n      width = _a.width,\n      height = _a.height;\n    canvasElement.style.width = width + 'px';\n    canvasElement.style.height = height + 'px';\n    canvasElement.width = width;\n    canvasElement.height = height;\n    return canvasElement;\n  };\n  /**\n   * Just tries to play the video and logs any errors.\n   * The play call is only made is the video is not already playing.\n   */\n  BrowserCodeReader.tryPlayVideo = function (videoElement) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (videoElement === null || videoElement === void 0 ? void 0 : videoElement.ended) {\n              // tslint:disable-next-line:no-console\n              console.error('Trying to play video that has ended.');\n              return [2 /*return*/, false];\n            }\n            if (BrowserCodeReader.isVideoPlaying(videoElement)) {\n              // tslint:disable-next-line:no-console\n              console.warn('Trying to play video that is already playing.');\n              return [2 /*return*/, true];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, videoElement.play()];\n          case 2:\n            _a.sent();\n            return [2 /*return*/, true];\n          case 3:\n            error_1 = _a.sent();\n            // tslint:disable-next-line:no-console\n            console.warn('It was not possible to play the video.', error_1);\n            return [2 /*return*/, false];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Creates a canvas and draws the current image frame from the media element on it.\n   *\n   * @param mediaElement HTML media element to extract an image frame from.\n   */\n  BrowserCodeReader.createCanvasFromMediaElement = function (mediaElement) {\n    var canvas = BrowserCodeReader.createCaptureCanvas(mediaElement);\n    var ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Couldn\\'t find Canvas 2D Context.');\n    }\n    BrowserCodeReader.drawImageOnCanvas(ctx, mediaElement);\n    return canvas;\n  };\n  /**\n   * Creates a binaryBitmap based in some image source.\n   *\n   * @param mediaElement HTML element containing drawable image source.\n   */\n  BrowserCodeReader.createBinaryBitmapFromMediaElem = function (mediaElement) {\n    var canvas = BrowserCodeReader.createCanvasFromMediaElement(mediaElement);\n    return BrowserCodeReader.createBinaryBitmapFromCanvas(canvas);\n  };\n  BrowserCodeReader.destroyImageElement = function (imageElement) {\n    imageElement.src = '';\n    imageElement.removeAttribute('src');\n    imageElement = undefined;\n  };\n  /**\n   * Lists all the available video input devices.\n   */\n  BrowserCodeReader.listVideoInputDevices = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var devices, videoDevices, devices_1, devices_1_1, device, kind, deviceId, label, groupId, videoDevice;\n      var e_2, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!hasNavigator()) {\n              throw new Error('Can\\'t enumerate devices, navigator is not present.');\n            }\n            if (!canEnumerateDevices()) {\n              throw new Error('Can\\'t enumerate devices, method not supported.');\n            }\n            return [4 /*yield*/, navigator.mediaDevices.enumerateDevices()];\n          case 1:\n            devices = _b.sent();\n            videoDevices = [];\n            try {\n              for (devices_1 = __values(devices), devices_1_1 = devices_1.next(); !devices_1_1.done; devices_1_1 = devices_1.next()) {\n                device = devices_1_1.value;\n                kind = device.kind === 'video' ? 'videoinput' : device.kind;\n                if (kind !== 'videoinput') {\n                  continue;\n                }\n                deviceId = device.deviceId || device.id;\n                label = device.label || \"Video device \".concat(videoDevices.length + 1);\n                groupId = device.groupId;\n                videoDevice = {\n                  deviceId: deviceId,\n                  label: label,\n                  kind: kind,\n                  groupId: groupId\n                };\n                videoDevices.push(videoDevice);\n              }\n            } catch (e_2_1) {\n              e_2 = {\n                error: e_2_1\n              };\n            } finally {\n              try {\n                if (devices_1_1 && !devices_1_1.done && (_a = devices_1.return)) _a.call(devices_1);\n              } finally {\n                if (e_2) throw e_2.error;\n              }\n            }\n            return [2 /*return*/, videoDevices];\n        }\n      });\n    });\n  };\n  /**\n   * Let's you find a device using it's Id.\n   */\n  BrowserCodeReader.findDeviceById = function (deviceId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var devices;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, BrowserCodeReader.listVideoInputDevices()];\n          case 1:\n            devices = _a.sent();\n            if (!devices) {\n              return [2 /*return*/];\n            }\n            return [2 /*return*/, devices.find(function (x) {\n              return x.deviceId === deviceId;\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Unbinds a HTML video src property.\n   */\n  BrowserCodeReader.cleanVideoSource = function (videoElement) {\n    if (!videoElement) {\n      return;\n    }\n    // forgets about that element 😢\n    try {\n      videoElement.srcObject = null;\n    } catch (err) {\n      videoElement.src = '';\n    }\n    if (videoElement) {\n      videoElement.removeAttribute('src');\n    }\n  };\n  /**\n   * Stops all media streams that are created.\n   */\n  BrowserCodeReader.releaseAllStreams = function () {\n    if (BrowserCodeReader.streamTracker.length !== 0) {\n      // tslint:disable-next-line:no-console\n      BrowserCodeReader.streamTracker.forEach(function (mediaStream) {\n        mediaStream.getTracks().forEach(function (track) {\n          return track.stop();\n        });\n      });\n    }\n    BrowserCodeReader.streamTracker = [];\n  };\n  /**\n   * Waits for a video to load and then hits play on it.\n   * To accomplish that, it binds listeners and callbacks to the video element.\n   *\n   * @param element The video element.\n   * @param callbackFn Callback invoked when the video is played.\n   */\n  BrowserCodeReader.playVideoOnLoadAsync = function (element, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n      var isPlaying;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, BrowserCodeReader.tryPlayVideo(element)];\n          case 1:\n            isPlaying = _a.sent();\n            if (isPlaying) {\n              return [2 /*return*/, true];\n            }\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              // waits 3 seconds or rejects.\n              var timeoutId = setTimeout(function () {\n                if (BrowserCodeReader.isVideoPlaying(element)) {\n                  // if video is playing then we had success, just ignore\n                  return;\n                }\n                reject(false);\n                element.removeEventListener('canplay', videoCanPlayListener);\n              }, timeout);\n              /**\n               * Should contain the current registered listener for video loaded-metadata,\n               * used to unregister that listener when needed.\n               */\n              var videoCanPlayListener = function () {\n                BrowserCodeReader.tryPlayVideo(element).then(function (hasPlayed) {\n                  clearTimeout(timeoutId);\n                  element.removeEventListener('canplay', videoCanPlayListener);\n                  resolve(hasPlayed);\n                });\n              };\n              // both should be unregistered after called\n              element.addEventListener('canplay', videoCanPlayListener);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Sets the new stream and request a new decoding-with-delay.\n   *\n   * @param stream The stream to be shown in the video element.\n   * @param decodeFn A callback for the decode method.\n   */\n  BrowserCodeReader.attachStreamToVideo = function (stream, preview, previewPlayTimeout) {\n    if (previewPlayTimeout === void 0) {\n      previewPlayTimeout = 5000;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var videoElement;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            videoElement = BrowserCodeReader.prepareVideoElement(preview);\n            BrowserCodeReader.addVideoSource(videoElement, stream);\n            return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(videoElement, previewPlayTimeout)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, videoElement];\n        }\n      });\n    });\n  };\n  /**\n   * Returns a Promise that resolves when the given image element loads.\n   */\n  BrowserCodeReader._waitImageLoad = function (element) {\n    return new Promise(function (resolve, reject) {\n      var timeout = 10000;\n      // waits 10 seconds or rejects.\n      var timeoutId = setTimeout(function () {\n        if (BrowserCodeReader.isImageLoaded(element)) {\n          // if video is playing then we had success, just ignore\n          return;\n        }\n        // removes the listener\n        element.removeEventListener('load', imageLoadedListener);\n        // rejects the load\n        reject();\n      }, timeout);\n      var imageLoadedListener = function () {\n        clearTimeout(timeoutId);\n        // removes the listener\n        element.removeEventListener('load', imageLoadedListener);\n        // resolves the load\n        resolve();\n      };\n      element.addEventListener('load', imageLoadedListener);\n    });\n  };\n  /**\n   * Checks if the `callbackFn` is defined, otherwise throws.\n   */\n  BrowserCodeReader.checkCallbackFnOrThrow = function (callbackFn) {\n    if (!callbackFn) {\n      throw new ArgumentException('`callbackFn` is a required parameter, you cannot capture results without it.');\n    }\n  };\n  /**\n   * Standard method to dispose a media stream object.\n   */\n  BrowserCodeReader.disposeMediaStream = function (stream) {\n    stream.getVideoTracks().forEach(function (x) {\n      return x.stop();\n    });\n    stream = undefined;\n  };\n  /**\n   * Gets the BinaryBitmap for ya! (and decodes it)\n   */\n  BrowserCodeReader.prototype.decode = function (element) {\n    // get binary bitmap for decode function\n    var canvas = BrowserCodeReader.createCanvasFromMediaElement(element);\n    return this.decodeFromCanvas(canvas);\n  };\n  /**\n   * Call the encapsulated readers decode\n   */\n  BrowserCodeReader.prototype.decodeBitmap = function (binaryBitmap) {\n    return this.reader.decode(binaryBitmap, this.hints);\n  };\n  /**\n   * Decodes some barcode from a canvas!\n   */\n  BrowserCodeReader.prototype.decodeFromCanvas = function (canvas) {\n    var binaryBitmap = BrowserCodeReader.createBinaryBitmapFromCanvas(canvas);\n    return this.decodeBitmap(binaryBitmap);\n  };\n  /**\n   * Decodes something from an image HTML element.\n   */\n  BrowserCodeReader.prototype.decodeFromImageElement = function (source) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!source) {\n              throw new ArgumentException('An image element must be provided.');\n            }\n            element = BrowserCodeReader.prepareImageElement(source);\n            return [4 /*yield*/, this._decodeOnLoadImage(element)];\n          case 1:\n            // onLoad will remove it's callback once done\n            // we do not need to dispose or destroy the image\n            // since it came from the user\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Decodes an image from a URL.\n   */\n  BrowserCodeReader.prototype.decodeFromImageUrl = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!url) {\n              throw new ArgumentException('An URL must be provided.');\n            }\n            element = BrowserCodeReader.prepareImageElement();\n            // loads the image.\n            element.src = url;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1,, 3, 4]);\n            return [4 /*yield*/, this.decodeFromImageElement(element)];\n          case 2:\n            // it waits the task so we can destroy the created image after\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            // we created this element, so we destroy it\n            BrowserCodeReader.destroyImageElement(element);\n            return [7 /*endfinally*/];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Continuously tries to decode the barcode from a stream obtained from the given constraints\n   * while showing the video in the specified video element.\n   *\n   * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n   * @param {string|HTMLVideoElement} [previewElem] the video element in page where to show the video while\n   *  decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in\n   *  which case no video will be shown.\n   */\n  BrowserCodeReader.prototype.decodeFromConstraints = function (constraints, previewElem, callbackFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var stream, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n            return [4 /*yield*/, this.getUserMedia(constraints)];\n          case 1:\n            stream = _a.sent();\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, this.decodeFromStream(stream, previewElem, callbackFn)];\n          case 3:\n            return [2 /*return*/, _a.sent()];\n          case 4:\n            error_2 = _a.sent();\n            BrowserCodeReader.disposeMediaStream(stream);\n            throw error_2;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * In one attempt, tries to decode the barcode from a stream obtained from the given constraints\n   * while showing the video in the specified video element.\n   *\n   * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n   * @param {string|HTMLVideoElement} [preview] the video element in page where to show the video\n   *  while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined,\n   *  in which case no video will be shown.\n   */\n  BrowserCodeReader.prototype.decodeFromStream = function (stream, preview, callbackFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var timeout, video, finalizeCallback, originalControls, videoTracks, controls, isTorchAvailable, torchTrack_1, switchTorch_1;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n            timeout = this.options.tryPlayVideoTimeout;\n            return [4 /*yield*/, BrowserCodeReader.attachStreamToVideo(stream, preview, timeout)];\n          case 1:\n            video = _a.sent();\n            finalizeCallback = function () {\n              // stops video tracks and releases the stream reference\n              BrowserCodeReader.disposeMediaStream(stream);\n              // this video was just a preview, so in order\n              // to release the stream we gotta stop showing\n              // it (the stream) in the video element\n              BrowserCodeReader.cleanVideoSource(video);\n            };\n            originalControls = this.scan(video, callbackFn, finalizeCallback);\n            videoTracks = stream.getVideoTracks();\n            controls = __assign(__assign({}, originalControls), {\n              stop: function () {\n                originalControls.stop();\n              },\n              streamVideoConstraintsApply: function (constraints, trackFilter) {\n                return __awaiter(this, void 0, void 0, function () {\n                  var tracks, tracks_2, tracks_2_1, track, e_3_1;\n                  var e_3, _a;\n                  return __generator(this, function (_b) {\n                    switch (_b.label) {\n                      case 0:\n                        tracks = trackFilter ? videoTracks.filter(trackFilter) : videoTracks;\n                        _b.label = 1;\n                      case 1:\n                        _b.trys.push([1, 6, 7, 8]);\n                        tracks_2 = __values(tracks), tracks_2_1 = tracks_2.next();\n                        _b.label = 2;\n                      case 2:\n                        if (!!tracks_2_1.done) return [3 /*break*/, 5];\n                        track = tracks_2_1.value;\n                        return [4 /*yield*/, track.applyConstraints(constraints)];\n                      case 3:\n                        _b.sent();\n                        _b.label = 4;\n                      case 4:\n                        tracks_2_1 = tracks_2.next();\n                        return [3 /*break*/, 2];\n                      case 5:\n                        return [3 /*break*/, 8];\n                      case 6:\n                        e_3_1 = _b.sent();\n                        e_3 = {\n                          error: e_3_1\n                        };\n                        return [3 /*break*/, 8];\n                      case 7:\n                        try {\n                          if (tracks_2_1 && !tracks_2_1.done && (_a = tracks_2.return)) _a.call(tracks_2);\n                        } finally {\n                          if (e_3) throw e_3.error;\n                        }\n                        return [7 /*endfinally*/];\n                      case 8:\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              },\n              streamVideoConstraintsGet: function (trackFilter) {\n                return videoTracks.find(trackFilter).getConstraints();\n              },\n              streamVideoSettingsGet: function (trackFilter) {\n                return videoTracks.find(trackFilter).getSettings();\n              },\n              streamVideoCapabilitiesGet: function (trackFilter) {\n                return videoTracks.find(trackFilter).getCapabilities();\n              }\n            });\n            isTorchAvailable = BrowserCodeReader.mediaStreamIsTorchCompatible(stream);\n            if (isTorchAvailable) {\n              torchTrack_1 = videoTracks === null || videoTracks === void 0 ? void 0 : videoTracks.find(function (t) {\n                return BrowserCodeReader.mediaStreamIsTorchCompatibleTrack(t);\n              });\n              switchTorch_1 = function (onOff) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4 /*yield*/, BrowserCodeReader.mediaStreamSetTorch(torchTrack_1, onOff)];\n                      case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              };\n              controls.switchTorch = switchTorch_1;\n              controls.stop = function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        originalControls.stop();\n                        return [4 /*yield*/, switchTorch_1(false)];\n                      case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              };\n            }\n            return [2 /*return*/, controls];\n        }\n      });\n    });\n  };\n  /**\n   * Continuously tries to decode the barcode from the device specified by device while showing\n   * the video in the specified video element.\n   *\n   * @param {string|null} [deviceId] the id of one of the devices obtained after calling\n   *  getVideoInputDevices. Can be undefined, in this case it will decode from one of the\n   *  available devices, preferring the main camera (environment facing) if available.\n   * @param {string|HTMLVideoElement|null} [video] the video element in page where to show the video\n   *  while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined,\n   *  in which case no video will be shown.\n   */\n  BrowserCodeReader.prototype.decodeFromVideoDevice = function (deviceId, previewElem, callbackFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var videoConstraints, constraints;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n            if (!deviceId) {\n              videoConstraints = {\n                facingMode: 'environment'\n              };\n            } else {\n              videoConstraints = {\n                deviceId: {\n                  exact: deviceId\n                }\n              };\n            }\n            constraints = {\n              video: videoConstraints\n            };\n            return [4 /*yield*/, this.decodeFromConstraints(constraints, previewElem, callbackFn)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Decodes something from an image HTML element.\n   */\n  BrowserCodeReader.prototype.decodeFromVideoElement = function (source, callbackFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element, timeout;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n            if (!source) {\n              throw new ArgumentException('A video element must be provided.');\n            }\n            element = BrowserCodeReader.prepareVideoElement(source);\n            timeout = this.options.tryPlayVideoTimeout;\n            // plays the video\n            return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(element, timeout)];\n          case 1:\n            // plays the video\n            _a.sent();\n            // starts decoding after played the video\n            return [2 /*return*/, this.scan(element, callbackFn)];\n        }\n      });\n    });\n  };\n  /**\n   * Decodes a video from a URL until it ends.\n   */\n  BrowserCodeReader.prototype.decodeFromVideoUrl = function (url, callbackFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element, finalizeCallback, timeout, controls;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n            if (!url) {\n              throw new ArgumentException('An URL must be provided.');\n            }\n            element = BrowserCodeReader.prepareVideoElement();\n            // starts loading the video\n            element.src = url;\n            finalizeCallback = function () {\n              // dispose created video element\n              BrowserCodeReader.cleanVideoSource(element);\n            };\n            timeout = this.options.tryPlayVideoTimeout;\n            // plays the video\n            return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(element, timeout)];\n          case 1:\n            // plays the video\n            _a.sent();\n            controls = this.scan(element, callbackFn, finalizeCallback);\n            return [2 /*return*/, controls];\n        }\n      });\n    });\n  };\n  /**\n   * In one attempt, tries to decode the barcode from a stream obtained from the given\n   * constraints while showing the video in the specified video element.\n   *\n   * @param constraints the media stream constraints to get s valid media stream to decode from\n   * @param videoSource the video element in page where to show the video while decoding.\n   *  Can be either an element id or directly an HTMLVideoElement. Can be undefined,\n   *  in which case no video will be shown.\n   *  The decoding result.\n   */\n  BrowserCodeReader.prototype.decodeOnceFromConstraints = function (constraints, videoSource) {\n    return __awaiter(this, void 0, void 0, function () {\n      var stream;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getUserMedia(constraints)];\n          case 1:\n            stream = _a.sent();\n            return [4 /*yield*/, this.decodeOnceFromStream(stream, videoSource)];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * In one attempt, tries to decode the barcode from a stream obtained from the given\n   * constraints while showing the video in the specified video element.\n   *\n   * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n   * @param {string|HTMLVideoElement} [video] the video element in page where to show the video while decoding.\n   *  Can be either an element id or directly an HTMLVideoElement. Can be undefined,\n   *  in which case no video will be shown.\n   */\n  BrowserCodeReader.prototype.decodeOnceFromStream = function (stream, preview) {\n    return __awaiter(this, void 0, void 0, function () {\n      var receivedPreview, video, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            receivedPreview = Boolean(preview);\n            return [4 /*yield*/, BrowserCodeReader.attachStreamToVideo(stream, preview)];\n          case 1:\n            video = _a.sent();\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2,, 4, 5]);\n            return [4 /*yield*/, this.scanOneResult(video)];\n          case 3:\n            result = _a.sent();\n            return [2 /*return*/, result];\n          case 4:\n            if (!receivedPreview) {\n              BrowserCodeReader.cleanVideoSource(video);\n            }\n            return [7 /*endfinally*/];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * In one attempt, tries to decode the barcode from the device specified by deviceId\n   * while showing the video in the specified video element.\n   *\n   * @param deviceId the id of one of the devices obtained after calling getVideoInputDevices.\n   *  Can be undefined, in this case it will decode from one of the available devices,\n   *  preferring the main camera (environment facing) if available.\n   * @param videoSource the video element in page where to show the video while decoding.\n   *  Can be either an element id or directly an HTMLVideoElement. Can be undefined,\n   *  in which case no video will be shown.\n   */\n  BrowserCodeReader.prototype.decodeOnceFromVideoDevice = function (deviceId, videoSource) {\n    return __awaiter(this, void 0, void 0, function () {\n      var videoConstraints, constraints;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!deviceId) {\n              videoConstraints = {\n                facingMode: 'environment'\n              };\n            } else {\n              videoConstraints = {\n                deviceId: {\n                  exact: deviceId\n                }\n              };\n            }\n            constraints = {\n              video: videoConstraints\n            };\n            return [4 /*yield*/, this.decodeOnceFromConstraints(constraints, videoSource)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Decodes something from an image HTML element.\n   */\n  BrowserCodeReader.prototype.decodeOnceFromVideoElement = function (source) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element, timeout;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!source) {\n              throw new ArgumentException('A video element must be provided.');\n            }\n            element = BrowserCodeReader.prepareVideoElement(source);\n            timeout = this.options.tryPlayVideoTimeout;\n            // plays the video\n            return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(element, timeout)];\n          case 1:\n            // plays the video\n            _a.sent();\n            return [4 /*yield*/, this.scanOneResult(element)];\n          case 2:\n            // starts decoding after played the video\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Decodes a video from a URL.\n   */\n  BrowserCodeReader.prototype.decodeOnceFromVideoUrl = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var element, task;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!url) {\n              throw new ArgumentException('An URL must be provided.');\n            }\n            element = BrowserCodeReader.prepareVideoElement();\n            // starts loading the video\n            element.src = url;\n            task = this.decodeOnceFromVideoElement(element);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1,, 3, 4]);\n            return [4 /*yield*/, task];\n          case 2:\n            // it waits the task so we can destroy the created image after\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            // we created this element, so we destroy it\n            BrowserCodeReader.cleanVideoSource(element);\n            return [7 /*endfinally*/];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Tries to decode from the video input until it finds some value.\n   */\n  BrowserCodeReader.prototype.scanOneResult = function (element, retryIfNotFound, retryIfChecksumError, retryIfFormatError) {\n    var _this = this;\n    if (retryIfNotFound === void 0) {\n      retryIfNotFound = true;\n    }\n    if (retryIfChecksumError === void 0) {\n      retryIfChecksumError = true;\n    }\n    if (retryIfFormatError === void 0) {\n      retryIfFormatError = true;\n    }\n    return new Promise(function (resolve, reject) {\n      // reuses the scan API, but returns at the first successful result\n      _this.scan(element, function (result, error, controls) {\n        if (result) {\n          // good result, returning\n          resolve(result);\n          controls.stop();\n          return;\n        }\n        if (error) {\n          // checks if it should retry\n          if (error instanceof NotFoundException && retryIfNotFound) {\n            return;\n          }\n          if (error instanceof ChecksumException && retryIfChecksumError) {\n            return;\n          }\n          if (error instanceof FormatException && retryIfFormatError) {\n            return;\n          }\n          // not re-trying\n          controls.stop(); // stops scan loop\n          reject(error); // returns the error\n        }\n      });\n    });\n  };\n  /**\n   * Continuously decodes from video input.\n   *\n   * @param element HTML element to scan/decode from. It will not be disposed or destroyed.\n   * @param callbackFn Called after every scan attempt, being it successful or errored.\n   * @param finalizeCallback Called after scan process reaches the end or stop is called.\n   */\n  BrowserCodeReader.prototype.scan = function (element, callbackFn, finalizeCallback) {\n    var _this = this;\n    BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\n    /**\n     * The HTML canvas element, used to draw the video or image's frame for decoding.\n     */\n    var captureCanvas = BrowserCodeReader.createCaptureCanvas(element);\n    /**\n     * The HTML canvas element context.\n     */\n    var captureCanvasContext;\n    try {\n      captureCanvasContext = captureCanvas.getContext('2d', {\n        willReadFrequently: true\n      });\n    } catch (e) {\n      captureCanvasContext = captureCanvas.getContext('2d');\n    }\n    // cannot proceed w/o this\n    if (!captureCanvasContext) {\n      throw new Error('Couldn\\'t create canvas for visual element scan.');\n    }\n    var disposeCanvas = function () {\n      captureCanvasContext = undefined;\n      captureCanvas = undefined;\n    };\n    var stopScan = false;\n    var lastTimeoutId;\n    // can be called to break the scan loop\n    var stop = function () {\n      stopScan = true;\n      clearTimeout(lastTimeoutId);\n      disposeCanvas();\n      if (finalizeCallback) {\n        finalizeCallback();\n      }\n    };\n    // created for extensibility\n    var controls = {\n      stop: stop\n    };\n    // this async loop allows infinite (or almost? maybe) scans\n    var loop = function () {\n      if (stopScan) {\n        // no need to clear timeouts as none was create yet in this scope.\n        return;\n      }\n      try {\n        BrowserCodeReader.drawImageOnCanvas(captureCanvasContext, element);\n        var result = _this.decodeFromCanvas(captureCanvas);\n        callbackFn(result, undefined, controls);\n        lastTimeoutId = setTimeout(loop, _this.options.delayBetweenScanSuccess);\n      } catch (error) {\n        callbackFn(undefined, error, controls);\n        var isChecksumError = error instanceof ChecksumException;\n        var isFormatError = error instanceof FormatException;\n        var isNotFound = error instanceof NotFoundException;\n        if (isChecksumError || isFormatError || isNotFound) {\n          // trying again\n          lastTimeoutId = setTimeout(loop, _this.options.delayBetweenScanAttempts);\n          return;\n        }\n        // not trying again\n        disposeCanvas();\n        if (finalizeCallback) {\n          finalizeCallback(error);\n        }\n      }\n    };\n    // starts the async loop\n    loop();\n    return controls;\n  };\n  /**\n   * Waits for the image to load and then tries to decode it.\n   */\n  BrowserCodeReader.prototype._decodeOnLoadImage = function (element) {\n    return __awaiter(this, void 0, void 0, function () {\n      var isImageLoaded;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            isImageLoaded = BrowserCodeReader.isImageLoaded(element);\n            if (!!isImageLoaded) return [3 /*break*/, 2];\n            return [4 /*yield*/, BrowserCodeReader._waitImageLoad(element)];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/, this.decode(element)];\n        }\n      });\n    });\n  };\n  /**\n   * Get MediaStream from browser to be used.\n   * @param constraints constraints the media stream constraints to get s valid media stream to decode from.\n   * @private For private use.\n   */\n  BrowserCodeReader.prototype.getUserMedia = function (constraints) {\n    return __awaiter(this, void 0, void 0, function () {\n      var stream;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, navigator.mediaDevices.getUserMedia(constraints)];\n          case 1:\n            stream = _a.sent();\n            BrowserCodeReader.streamTracker.push(stream);\n            return [2 /*return*/, stream];\n        }\n      });\n    });\n  };\n  /**\n   * Keeps track to created media streams.\n   * @private there is no need this array to be accessible from outside.\n   */\n  BrowserCodeReader.streamTracker = [];\n  return BrowserCodeReader;\n}();\nexport { BrowserCodeReader };\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { AztecCodeReader } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\n/**\n * Aztec Code reader to use from browser.\n *\n * @class BrowserAztecCodeReader\n * @extends {BrowserCodeReader}\n */\nvar BrowserAztecCodeReader = /** @class */function (_super) {\n  __extends(BrowserAztecCodeReader, _super);\n  /**\n   * Creates an instance of BrowserAztecCodeReader.\n   */\n  function BrowserAztecCodeReader(hints, options) {\n    return _super.call(this, new AztecCodeReader(), hints, options) || this;\n  }\n  return BrowserAztecCodeReader;\n}(BrowserCodeReader);\nexport { BrowserAztecCodeReader };\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { MultiFormatOneDReader } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\n/**\n * Reader to be used for any One Dimension type barcode.\n */\nvar BrowserMultiFormatOneDReader = /** @class */function (_super) {\n  __extends(BrowserMultiFormatOneDReader, _super);\n  /**\n   * Creates an instance of BrowserBarcodeReader.\n   * @param {Map<DecodeHintType, any>} hints?\n   * @param options\n   */\n  function BrowserMultiFormatOneDReader(hints, options) {\n    return _super.call(this, new MultiFormatOneDReader(hints), hints, options) || this;\n  }\n  return BrowserMultiFormatOneDReader;\n}(BrowserCodeReader);\nexport { BrowserMultiFormatOneDReader };\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { DataMatrixReader } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\n/**\n * QR Code reader to use from browser.\n */\nvar BrowserDatamatrixCodeReader = /** @class */function (_super) {\n  __extends(BrowserDatamatrixCodeReader, _super);\n  /**\n   * Creates an instance of BrowserQRCodeReader.\n   */\n  function BrowserDatamatrixCodeReader(hints, options) {\n    return _super.call(this, new DataMatrixReader(), hints, options) || this;\n  }\n  return BrowserDatamatrixCodeReader;\n}(BrowserCodeReader);\nexport { BrowserDatamatrixCodeReader };\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { DecodeHintType, MultiFormatReader } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\nvar BrowserMultiFormatReader = /** @class */function (_super) {\n  __extends(BrowserMultiFormatReader, _super);\n  function BrowserMultiFormatReader(hints, options) {\n    var _this = this;\n    var reader = new MultiFormatReader();\n    reader.setHints(hints);\n    _this = _super.call(this, reader, hints, options) || this;\n    _this.reader = reader;\n    return _this;\n  }\n  Object.defineProperty(BrowserMultiFormatReader.prototype, \"possibleFormats\", {\n    set: function (formats) {\n      this.hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\n      this.reader.setHints(this.hints);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Overwrite decodeBitmap to call decodeWithState, which will pay\n   * attention to the hints set in the constructor function\n   */\n  BrowserMultiFormatReader.prototype.decodeBitmap = function (binaryBitmap) {\n    return this.reader.decodeWithState(binaryBitmap);\n  };\n  /**\n   * Allows to change hints in runtime.\n   */\n  BrowserMultiFormatReader.prototype.setHints = function (hints) {\n    this.hints = hints;\n    this.reader.setHints(this.hints);\n  };\n  return BrowserMultiFormatReader;\n}(BrowserCodeReader);\nexport { BrowserMultiFormatReader };\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { PDF417Reader } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\n/**\n * QR Code reader to use from browser.\n */\nvar BrowserPDF417Reader = /** @class */function (_super) {\n  __extends(BrowserPDF417Reader, _super);\n  /**\n   * Creates an instance of BrowserPDF417Reader.\n   */\n  function BrowserPDF417Reader(hints, options) {\n    return _super.call(this, new PDF417Reader(), hints, options) || this;\n  }\n  return BrowserPDF417Reader;\n}(BrowserCodeReader);\nexport { BrowserPDF417Reader };\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { QRCodeReader } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\n/**\n * QR Code reader to use from browser.\n */\nvar BrowserQRCodeReader = /** @class */function (_super) {\n  __extends(BrowserQRCodeReader, _super);\n  /**\n   * Creates an instance of BrowserQRCodeReader.\n   */\n  function BrowserQRCodeReader(hints, options) {\n    return _super.call(this, new QRCodeReader(), hints, options) || this;\n  }\n  return BrowserQRCodeReader;\n}(BrowserCodeReader);\nexport { BrowserQRCodeReader };\n", "import { EncodeHintType, IllegalArgumentException, IllegalStateException, QRCodeDecoderErrorCorrectionLevel, QRCodeEncoder } from '@zxing/library';\nvar svgNs = 'http://www.w3.org/2000/svg';\n/**/\nvar BrowserCodeSvgWriter = /** @class */function () {\n  /**\n   * Constructs. 😉\n   */\n  function BrowserCodeSvgWriter(containerElement) {\n    if (typeof containerElement === 'string') {\n      var container = document.getElementById(containerElement);\n      if (!container) {\n        throw new Error(\"Could not find a Container element with '\".concat(containerElement, \"'.\"));\n      }\n      this.containerElement = container;\n    } else {\n      this.containerElement = containerElement;\n    }\n  }\n  /**\n   * Writes the QR code to a SVG and renders it in the container.\n   */\n  BrowserCodeSvgWriter.prototype.write = function (contents, width, height, hints) {\n    if (contents.length === 0) {\n      throw new IllegalArgumentException('Found empty contents');\n    }\n    if (width < 0 || height < 0) {\n      throw new IllegalArgumentException('Requested dimensions are too small: ' + width + 'x' + height);\n    }\n    var quietZone = hints && hints.get(EncodeHintType.MARGIN) !== undefined ? Number.parseInt(hints.get(EncodeHintType.MARGIN).toString(), 10) : BrowserCodeSvgWriter.QUIET_ZONE_SIZE;\n    var code = this.encode(hints, contents);\n    return this.renderResult(code, width, height, quietZone);\n  };\n  /**\n   * Creates a SVG element.\n   */\n  BrowserCodeSvgWriter.prototype.createSVGElement = function (w, h) {\n    var el = document.createElementNS(BrowserCodeSvgWriter.SVG_NS, 'svg');\n    el.setAttributeNS(svgNs, 'width', h.toString());\n    el.setAttributeNS(svgNs, 'height', w.toString());\n    return el;\n  };\n  /**\n   * Creates a SVG rect.\n   */\n  BrowserCodeSvgWriter.prototype.createSvgPathPlaceholderElement = function (w, h) {\n    var el = document.createElementNS(BrowserCodeSvgWriter.SVG_NS, 'path');\n    el.setAttributeNS(svgNs, 'd', \"M0 0h\".concat(w, \"v\").concat(h, \"H0z\"));\n    el.setAttributeNS(svgNs, 'fill', 'none');\n    return el;\n  };\n  /**\n   * Creates a SVG rect.\n   */\n  BrowserCodeSvgWriter.prototype.createSvgRectElement = function (x, y, w, h) {\n    var el = document.createElementNS(BrowserCodeSvgWriter.SVG_NS, 'rect');\n    el.setAttributeNS(svgNs, 'x', x.toString());\n    el.setAttributeNS(svgNs, 'y', y.toString());\n    el.setAttributeNS(svgNs, 'height', w.toString());\n    el.setAttributeNS(svgNs, 'width', h.toString());\n    el.setAttributeNS(svgNs, 'fill', '#000000');\n    return el;\n  };\n  /**\n   * Encodes the content to a Barcode type.\n   */\n  BrowserCodeSvgWriter.prototype.encode = function (hints, contents) {\n    var errorCorrectionLevel = QRCodeDecoderErrorCorrectionLevel.L;\n    if (hints && hints.get(EncodeHintType.ERROR_CORRECTION) !== undefined) {\n      var correctionStr = hints.get(EncodeHintType.ERROR_CORRECTION).toString();\n      errorCorrectionLevel = QRCodeDecoderErrorCorrectionLevel.fromString(correctionStr);\n    }\n    var code = QRCodeEncoder.encode(contents, errorCorrectionLevel, hints);\n    return code;\n  };\n  /**\n   * Renders the SVG in the container.\n   *\n   * @note the input matrix uses 0 == white, 1 == black. The output matrix\n   *  uses 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\n   */\n  BrowserCodeSvgWriter.prototype.renderResult = function (code, width /*int*/, height /*int*/, quietZone /*int*/) {\n    // if (this.format && format != this.format) {\n    //   throw new IllegalArgumentException(\"Can only encode QR_CODE, but got \" + format)\n    // }\n    var input = code.getMatrix();\n    if (input === null) {\n      throw new IllegalStateException();\n    }\n    var inputWidth = input.getWidth();\n    var inputHeight = input.getHeight();\n    var qrWidth = inputWidth + quietZone * 2;\n    var qrHeight = inputHeight + quietZone * 2;\n    var outputWidth = Math.max(width, qrWidth);\n    var outputHeight = Math.max(height, qrHeight);\n    var multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight));\n    // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\n    // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\n    // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\n    // handle all the padding from 100x100 (the actual QR) up to 200x160.\n    var leftPadding = Math.floor((outputWidth - inputWidth * multiple) / 2);\n    var topPadding = Math.floor((outputHeight - inputHeight * multiple) / 2);\n    var svgElement = this.createSVGElement(outputWidth, outputHeight);\n    var placeholder = this.createSvgPathPlaceholderElement(width, height);\n    svgElement.appendChild(placeholder);\n    this.containerElement.appendChild(svgElement);\n    // 2D loop\n    for (var inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n      // Write the contents of this row of the barcode\n      for (var inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n        if (input.get(inputX, inputY) === 1) {\n          var svgRectElement = this.createSvgRectElement(outputX, outputY, multiple, multiple);\n          svgElement.appendChild(svgRectElement);\n        }\n      }\n    }\n    return svgElement;\n  };\n  /**\n   * Default quiet zone in pixels.\n   */\n  BrowserCodeSvgWriter.QUIET_ZONE_SIZE = 4;\n  /**\n   * SVG markup NameSpace\n   */\n  BrowserCodeSvgWriter.SVG_NS = 'http://www.w3.org/2000/svg';\n  return BrowserCodeSvgWriter;\n}();\nexport { BrowserCodeSvgWriter };\n", "import { EncodeHintType, IllegalArgumentException, IllegalStateException, QRCodeDecoderErrorCorrectionLevel, QRCodeEncoder } from '@zxing/library';\nvar svgNs = 'http://www.w3.org/2000/svg';\n/**/\nvar BrowserQRCodeSvgWriter = /** @class */function () {\n  function BrowserQRCodeSvgWriter() {}\n  /**\n   * Writes and renders a QRCode SVG element.\n   *\n   * @param contents\n   * @param width\n   * @param height\n   * @param hints\n   */\n  BrowserQRCodeSvgWriter.prototype.write = function (contents, width, height, hints) {\n    if (contents.length === 0) {\n      throw new IllegalArgumentException('Found empty contents');\n    }\n    // if (format != BarcodeFormat.QR_CODE) {\n    //   throw new IllegalArgumentException(\"Can only encode QR_CODE, but got \" + format)\n    // }\n    if (width < 0 || height < 0) {\n      throw new IllegalArgumentException('Requested dimensions are too small: ' + width + 'x' + height);\n    }\n    var errorCorrectionLevel = QRCodeDecoderErrorCorrectionLevel.L;\n    var quietZone = BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE;\n    if (hints) {\n      if (undefined !== hints.get(EncodeHintType.ERROR_CORRECTION)) {\n        var correctionStr = hints.get(EncodeHintType.ERROR_CORRECTION).toString();\n        errorCorrectionLevel = QRCodeDecoderErrorCorrectionLevel.fromString(correctionStr);\n      }\n      if (undefined !== hints.get(EncodeHintType.MARGIN)) {\n        quietZone = Number.parseInt(hints.get(EncodeHintType.MARGIN).toString(), 10);\n      }\n    }\n    var code = QRCodeEncoder.encode(contents, errorCorrectionLevel, hints);\n    return this.renderResult(code, width, height, quietZone);\n  };\n  /**\n   * Renders the result and then appends it to the DOM.\n   */\n  BrowserQRCodeSvgWriter.prototype.writeToDom = function (containerElement, contents, width, height, hints) {\n    if (typeof containerElement === 'string') {\n      var targetEl = document.querySelector(containerElement);\n      if (!targetEl) {\n        throw new Error('Could no find the target HTML element.');\n      }\n      containerElement = targetEl;\n    }\n    var svgElement = this.write(contents, width, height, hints);\n    if (containerElement instanceof HTMLElement) {\n      containerElement.appendChild(svgElement);\n    }\n  };\n  /**\n   * Note that the input matrix uses 0 == white, 1 == black.\n   * The output matrix uses 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\n   */\n  BrowserQRCodeSvgWriter.prototype.renderResult = function (code, width /*int*/, height /*int*/, quietZone /*int*/) {\n    var input = code.getMatrix();\n    if (input === null) {\n      throw new IllegalStateException();\n    }\n    var inputWidth = input.getWidth();\n    var inputHeight = input.getHeight();\n    var qrWidth = inputWidth + quietZone * 2;\n    var qrHeight = inputHeight + quietZone * 2;\n    var outputWidth = Math.max(width, qrWidth);\n    var outputHeight = Math.max(height, qrHeight);\n    var multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight));\n    // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\n    // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\n    // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\n    // handle all the padding from 100x100 (the actual QR) up to 200x160.\n    var leftPadding = Math.floor((outputWidth - inputWidth * multiple) / 2);\n    var topPadding = Math.floor((outputHeight - inputHeight * multiple) / 2);\n    var svgElement = this.createSVGElement(outputWidth, outputHeight);\n    for (var inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n      // Write the contents of this row of the barcode\n      for (var inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n        if (input.get(inputX, inputY) === 1) {\n          var svgRectElement = this.createSvgRectElement(outputX, outputY, multiple, multiple);\n          svgElement.appendChild(svgRectElement);\n        }\n      }\n    }\n    return svgElement;\n  };\n  /**\n   * Creates a SVG element.\n   *\n   * @param w SVG's width attribute\n   * @param h SVG's height attribute\n   */\n  BrowserQRCodeSvgWriter.prototype.createSVGElement = function (w, h) {\n    var svgElement = document.createElementNS(svgNs, 'svg');\n    var width = w.toString();\n    var height = h.toString();\n    svgElement.setAttribute('height', height);\n    svgElement.setAttribute('width', width);\n    svgElement.setAttribute('viewBox', \"0 0 \" + width + \" \" + height);\n    return svgElement;\n  };\n  /**\n   * Creates a SVG rect element.\n   *\n   * @param x Element's x coordinate\n   * @param y Element's y coordinate\n   * @param w Element's width attribute\n   * @param h Element's height attribute\n   */\n  BrowserQRCodeSvgWriter.prototype.createSvgRectElement = function (x, y, w, h) {\n    var rect = document.createElementNS(svgNs, 'rect');\n    rect.setAttribute('x', x.toString());\n    rect.setAttribute('y', y.toString());\n    rect.setAttribute('height', w.toString());\n    rect.setAttribute('width', h.toString());\n    rect.setAttribute('fill', '#000000');\n    return rect;\n  };\n  BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE = 4;\n  return BrowserQRCodeSvgWriter;\n}();\nexport { BrowserQRCodeSvgWriter };\n"],
  "mappings": "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",
  "names": ["d", "b", "HTMLCanvasElementLuminanceSource", "BrowserCodeReader", "_a", "__extends", "d", "b", "BrowserAztecCodeReader", "__extends", "d", "b", "BrowserMultiFormatOneDReader", "__extends", "d", "b", "BrowserDatamatrixCodeReader", "__extends", "d", "b", "BrowserMultiFormatReader", "__extends", "d", "b", "BrowserPDF417Reader", "__extends", "d", "b", "BrowserQRCodeReader", "BrowserCodeSvgWriter", "svgNs", "BrowserQRCodeSvgWriter"]
}
